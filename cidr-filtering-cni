#!/bin/bash -e

if [[ ${DEBUG} -gt 0 ]]; then set -x; fi

exec 3>&1
exec &>> /var/log/bash-cni-plugin.log

stdin=`cat /dev/stdin`
tmpfile="/tmp/cidr-filtering-cni-$(tr -dc 'A-F0-9' < /dev/urandom | head -c4)"

NFT_CHAIN=prerouting
NFT_CHAIN_HOOK=prerouting
NFT_BRIDGE_TABLE=filter

cni_ifname_to_tap_ifname() {
    echo "${CNI_IFNAME/"net"/"tap"}"
}

for_json_array() {
    _extract_array() {
        echo $1 | jq -c $2 | jq -c '.[]'
    }
    for row in $(_extract_array $1 $2); do
        $3 $row
    done
}

ip_from_json_to_str_with_mask () {
    ip=$(echo $1 | jq -r .ip)
    prefix=$(echo $1 | jq -r '.prefix_length')
    echo "${ip}/${prefix}"
}

create_chain() {
    ip netns exec $CNI_CONTAINERID nft add chain bridge ${NFT_BRIDGE_TABLE} "${NFT_CHAIN}" {type filter hook ${NFT_CHAIN_HOOK} priority 0\; policy drop \;}
}

allow_arp() {
    ip netns exec $CNI_CONTAINERID nft add rule bridge ${NFT_BRIDGE_TABLE} ${NFT_CHAIN_HOOK} ether type arp counter accept
}

create_ingress_rule() {
    ip netns exec $CNI_CONTAINERID nft add rule bridge ${NFT_BRIDGE_TABLE} ${NFT_CHAIN_HOOK} iifname $CNI_IFNAME ip saddr $(ip_from_json_to_str_with_mask $1) counter accept
}

create_egress_rule() {
    ip netns exec $CNI_CONTAINERID nft add rule bridge ${NFT_BRIDGE_TABLE} ${NFT_CHAIN_HOOK} iifname $(cni_ifname_to_tap_ifname) ip daddr $(ip_from_json_to_str_with_mask $1) counter accept
}

case $CNI_COMMAND in
ADD)

    echo "CNI_NETNS: $CNI_NETNS" >> $tmpfile
    echo "CNI_IFNAME: $CNI_IFNAME" >> $tmpfile
    echo "CNI_CONTAINERID: $CNI_CONTAINERID" >> $tmpfile

    mkdir -p /var/run/netns/
    ln -sf "$CNI_NETNS" /var/run/netns/"$CNI_CONTAINERID"

    rm -rf /tmp/cidr*
    ip netns exec $CNI_CONTAINERID ip a >> $tmpfile 

    create_chain
    allow_arp

    for_json_array $stdin '.ingress' create_ingress_rule
    for_json_array $stdin '.egress' create_egress_rule

    # echo empty response, since we haven't changed interfaces/routes
    echo "{
  \"cniVersion\": \"$(jq -r ".cniVersion" <<< "$stdin")\"
}" >&3
;;

VERSION)
    echo '{"cniVersion":"0.3.1","supportedVersions":["0.1.0","0.2.0","0.3.0","0.3.1"]}' >&3
;;

*)
    exit 0
;;

esac
